name: Build Pipeline

on:
  push:
      branches:
        - main
      paths-ignore:
        - '.github/**'
        - 'README.md'

env:
    GHCR_REGISTRY: ghcr.io
    DOCKERHUB_OWNER: theonlywaye
    IMAGE_NAME: recycler

jobs:
    semver:
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read
            attestations: write
            id-token: write
        outputs:
            current_version: ${{ steps.semver.outputs.current }}
            next_version: ${{ steps.semver.outputs.nextStrict }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Get Next Version
              id: semver
              uses: ietf-tools/semver-action@v1
              with:
                  token: ${{ github.token }}
                  branch: ${{ github.head_ref || github.ref_name }}
                  patchAll: true
                  majorList: "breaking,major"

    lint:
        name: Lint
        runs-on: ubuntu-latest
        needs: [semver]
        permissions:
            contents: write
        steps:
            - name: Clone the code
              uses: actions/checkout@v5
            - name: Setup Go
              uses: actions/setup-go@v6
              with:
                  go-version-file: go.mod
            - name: Run linter
              uses: golangci/golangci-lint-action@v8
              with:
                  version: latest

    test:
        name: Tests
        runs-on: ubuntu-latest
        needs: [semver]
        permissions:
            contents: read
        steps:
            - name: Clone the code
              uses: actions/checkout@v5
            - name: Setup Go
              uses: actions/setup-go@v6
              with:
                  go-version-file: go.mod
            - name: Running Tests
              run: |
                  go mod tidy
                  make test
            - name: Generate HTML coverage report
              run: go tool cover -html=cover.out -o coverage.html
            - name: Upload coverage report
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-report
                  path: coverage.html

    test-e2e:
        name: E2E Tests
        runs-on: ubuntu-latest
        needs: [semver]
        permissions:
            contents: read
        steps:
            - name: Clone the code
              uses: actions/checkout@v5
            - name: Setup Go
              uses: actions/setup-go@v6
              with:
                  go-version-file: go.mod
            - name: Install the latest version of kind
              run: |
                  make install-kind
            - name: Verify kind installation
              run: kind version
            - name: Running Test e2e
              run: |
                  go mod tidy
                  make test-e2e

    build:
        name: Build and Push Recycler Operator image
        runs-on: ubuntu-latest
        needs: [semver, lint, test, test-e2e]
        permissions:
            contents: write
            packages: write
        env:
            GHCR_REGISTRY: ghcr.io
            DOCKERHUB_OWNER: theonlywaye
            IMAGE_NAME: recycler
        steps:
            - name: Checkout code
              uses: actions/checkout@v5
            - name: Set up Go
              uses: actions/setup-go@v6
              with:
                  go-version-file: "go.mod"
            - name: Install Operator SDK
              run: make operator-sdk
            - name: Set Environment Variables
              run: echo "REPOSITORY_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.GHCR_REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ github.token }}
            - name: Build and Push Operator to GHCR
              run: |
                  FULL_IMAGE=${{ env.GHCR_REGISTRY }}/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}
                  CACHE_PATH=${{ env.GHCR_REGISTRY }}/${{ env.REPOSITORY_OWNER }}/cache
                  make docker-buildx BUILD_MODE=push IMG=${FULL_IMAGE}:${{ needs.semver.outputs.next_version }} VERSION=${{ needs.semver.outputs.next_version }} CACHE_PATH=${CACHE_PATH}
            - name: Login to Dockerhub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Build and Push Operator to Docker Hub
              run: |
                  FULL_IMAGE=${{ env.DOCKERHUB_OWNER }}/${{ env.IMAGE_NAME }}
                  make docker-buildx BUILD_MODE=push IMAGE_TAG_BASE=${FULL_IMAGE} IMG=${FULL_IMAGE}:${{ needs.semver.outputs.next_version }} VERSION=${{ needs.semver.outputs.next_version }} CACHE_PATH=${FULL_IMAGE}

    helm:
        name: Helm Chart Release
        runs-on: ubuntu-latest
        needs: [build]
        permissions:
            packages: write
            contents: write
            attestations: write
            id-token: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v5
              with:
                  ref: main
            - name: Update Chart Version
              run: |
                  sed -i "s/^version: .*/version: ${{ needs.semver.outputs.next_version }}/" helm-charts/recycler/Chart.yaml
                  sed -i "s/^appVersion: .*/appVersion: \"${{ needs.semver.outputs.next_version }}\"/" helm-charts/recycler/Chart.yaml
            - name: Update Helm chart image tag
              run: |
                  sed -i "s/tag: .*/tag: ${{ needs.semver.outputs.next_version }}/" helm-charts/recycler/values.yaml
            - name: Package Helm Chart
              run: |
                  mkdir -p ./releases
                  helm package ./helm-charts/recycler --destination ./releases
            - name: Authenticate with GHCR
              run: |
                  echo "${{ github.token }}" | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin
            - name: Push Helm Chart to GitHub Container Registry
              run: |
                  CHART_FILE=releases/recycler-${{ needs.semver.outputs.next_version }}.tgz
                  echo "Pushing $CHART_FILE to GHCR..."
                  helm push $CHART_FILE oci://ghcr.io/${{ github.repository_owner }}/charts
            - name: Update Release with Changelog and Helm Chart Link
              uses: softprops/action-gh-release@v2
              id: release
              with:
                  name: ${{ needs.semver.outputs.next_version }}
                  body: |
                      [Helm Chart ${{ needs.semver.outputs.next_version }}](https://github.com/${{ github.repository_owner }}/recycler/pkgs/container/charts%2Frecycler)
                  tag_name: ${{ needs.semver.outputs.next_version }}
                  append_body: true

    changelog:
        name: Update changelog
        runs-on: ubuntu-latest
        needs: [helm]
        permissions:
            contents: write
        steps:
            - name: Checkout Code
              uses: actions/checkout@v5
              with:
                  ref: main
            - name: Update CHANGELOG
              id: changelog
              uses: requarks/changelog-action@v1
              with:
                  token: ${{ github.token }}
                  tag: ${{ needs.semver.outputs.next_version }}
            - name: Update Release with Changelog
              uses: softprops/action-gh-release@v2
              id: release
              with:
                  name: ${{ needs.semver.outputs.next_version }}
                  body: ${{ steps.changelog.outputs.changes }}
                  tag_name: ${{ needs.semver.outputs.next_version }}
            - name: Commit CHANGELOG.md
              uses: stefanzweifel/git-auto-commit-action@v7
              with:
                  branch: main
                  commit_message: "docs: update CHANGELOG.md for ${{ needs.semver.outputs.next_version }} [skip ci]"
                  file_pattern: CHANGELOG.md
